ARG IMAGE_VERSION=jammy

@IF [ ${BUILDER_TARGET} = ubuntu-jammy ]
ARG IMAGE_NAME=ubuntu
@ENDIF
@IF [ ${BUILDER_TARGET} = ubuntu-jammy-amd64 ]
ARG IMAGE_NAME=amd64/ubuntu
@ENDIF
@IF [ ${BUILDER_TARGET} = ubuntu-jammy-arm64 ]
ARG IMAGE_NAME=arm64v8/ubuntu
@ENDIF

# Install cross-compiler packages if needed
@INCLUDE Dockerfile.cross-compile-debian

# Do the source builds next
@INCLUDE Dockerfile.target.sdist

FROM --platform=$TARGETPLATFORM ${IMAGE_NAME}:${IMAGE_VERSION} as dist-base
@INCLUDE Dockerfile.cross-compiler-binaries

ARG BUILDER_CACHE_BUSTER=
ARG APT_URL
RUN apt-get update && apt-get -y dist-upgrade

@INCLUDE Dockerfile.debbuild-prepare

@IF [ -n "$M_authoritative$M_all" ]
ADD builder-support/debian/authoritative/debian-buster/ pdns-${BUILDER_VERSION}/debian/
@ENDIF

@IF [ -n "$M_recursor$M_all" ]
ADD builder-support/debian/recursor/debian-buster/ pdns-recursor-${BUILDER_VERSION}/debian/
@ENDIF

@IF [ -n "$M_dnsdist$M_all" ]
ADD builder-support/debian/dnsdist/debian-buster/ dnsdist-${BUILDER_VERSION}/debian/
@ENDIF

@INCLUDE Dockerfile.debbuild

# Do a test install and verify
# Can be skipped with skiptests=1 in the environment
# @EXEC [ "$skiptests" = "" ] && include Dockerfile.debtest
