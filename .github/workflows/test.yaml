---
name: 'Test Build and test everything'

on:
  push:
  pull_request:
  workflow_call:
    inputs:
      branch-name:
        description: 'Checkout to a specific branch'
        required: true
        default: ''
        type: string
  schedule:
    - cron: '0 22 * * 3'

permissions: # least privileges, see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
  contents: read

env:
  COMPILER: clang
  CLANG_VERSION: '13'
  # github.workspace variable points to the Runner home folder. Container home folder defined below.
  REPO_HOME: '/__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}'
  BUILDER_VERSION: '0.0.0-git1'
  COVERAGE: ${{ github.repository == 'PowerDNS/pdns' && 'yes' || 'no' }}
  LLVM_PROFILE_FILE: "/tmp/code-%p.profraw"
  OPTIMIZATIONS: yes
  DECAF_SUPPORT: yes

jobs:
  build-auth:
    name: build auth
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/powerdns/base-pdns-ci-image/debian-12-pdns-base:master
      env:
        ASAN_OPTIONS: detect_leaks=0
        FUZZING_TARGETS: yes
        SANITIZERS: asan+ubsan
        UBSAN_OPTIONS: "print_stacktrace=1:halt_on_error=1:suppressions=${{ env.REPO_HOME }}/build-scripts/UBSan.supp"
        UNIT_TESTS: yes
      options: --privileged --sysctl vm.mmap_rnd_bits=28
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 5
          submodules: recursive
          ref: ${{ inputs.branch-name }}
      - run: ulimit -a
      - run: env
      - run: sudo sysctl -a | grep vm.mmap.rnd
      - run: sudo sysctl -w vm.mmap_rnd_bits=28
      - run: sudo sysctl -a | grep vm.mmap.rnd
      - run: ulimit -a
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: get runner image version
        id: runner-image-version
        run: |
          echo "image-version=$(echo $ImageVersion)" >> "$GITHUB_OUTPUT"
      - name: Set vm.mmap_rnd_bits=28
        if: ${{ steps.runner-image-version.outputs.ImageVersion }} == '20240310.1.0'
        run: |
          sudo sysctl -w vm.mmap_rnd_bits=28

  collect:
    runs-on: ubuntu-22.04
    env:
      ASAN_OPTIONS: detect_leaks=0
      FUZZING_TARGETS: yes
      SANITIZERS: asan+ubsan
      UBSAN_OPTIONS: "print_stacktrace=1:halt_on_error=1"
      UNIT_TESTS: yes
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 5
          submodules: recursive
          ref: ${{ inputs.branch-name }}
      - run: ulimit -a
      - run: env
      - run: sudo sysctl -a | grep vm.mmap.rnd
      - run: sudo sysctl -w vm.mmap_rnd_bits=28
      - run: sudo sysctl -a | grep vm.mmap.rnd
      - run: ulimit -a
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: get runner image version
        id: runner-image-version
        run: |
          echo "image-version=$(echo $ImageVersion)" >> "$GITHUB_OUTPUT"
      - name: Show default environment variables
        if: ${{ steps.runner-image-version.outputs.ImageVersion }} == '20240304.1.0'
        run: |
          echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
          echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
          echo "The run id is: $GITHUB_RUN_ID"
          echo "The GitHub Actor's username is: $GITHUB_ACTOR"
          echo "GitHub SHA: $GITHUB_SHA"

# FIXME: if we can make upload/download-artifact fasts, running unit tests outside of build can let regression tests start earlier
