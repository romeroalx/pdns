---
name: Build docker images

on:
  workflow_call:
    inputs:
      product:
        required: true
        description: Product to build
        type: string
      ref:
        description: git ref to checkout
        type: string
        default: master
        required: false
      image-name:
        description: repository name for the requested image
        type: string
        required: true
      image-tags:
        description: tag for the requested image
        type: string
        required: true
      image-description:
        description: short description for the image repository
        type: string
        required: true
      platforms:
        description: target platform(s) for the image to be built
        type: string
        default: linux/arm64/v8,linux/amd64
        required: false
      push:
        description: push image to DockerHub
        type: boolean
        required: true
    secrets:
      DOCKERHUB_ORGANIZATION_NAME:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

permissions: # least privileges, see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
  contents: read

jobs:
  build:
    name: build docker image for a product
    runs-on: ubuntu-22.04
    outputs:
      images: ${{ join(steps.meta.outputs.tags, ' ') }}
      test: ${{ steps.test.outputs.test }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          ref: ${{ inputs.ref }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64/v8
      - name: Set up Docker Buildx for multi-platform builds
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ inputs.platforms }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_ORGANIZATION_NAME }}/${{ inputs.image-name }}
          tags: ${{ inputs.image-tags }}
      - run: echo "test=ALEXIS" >> "$GITHUB_OUTPUT"
        id: test
      - run: cat "$GITHUB_OUTPUT"
      # - name: Build and load powerdns product images
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: Dockerfile-${{ inputs.product }}
      #     platforms: ${{ inputs.platforms }}
      #     push: ${{ inputs.push }}
      #     sbom: true
      #     tags: ${{ steps.meta.outputs.tags }}
      # - name: Update repo description
      #   if: ${{ inputs.push }}
      #   uses: peter-evans/dockerhub-description@v4
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      #     repository: ${{ secrets.DOCKERHUB_ORGANIZATION_NAME }}/${{ inputs.image-name }}
      #     short-description: ${{ inputs.image-description }}

  test-image-amd64:    
    name: test uploaded amd64 images
    if: ${{ contains(inputs.platforms, 'amd64') && inputs.push }}
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          ref: ${{ inputs.ref }}
      - run: echo '${{ needs.build.outputs.images }}'
      - run: echo '${{ needs.build.outputs.test }}'
      - run: |
          for i in '"${{ needs.build.outputs.images }}"'; do echo $i; done

  test-image-arm64:    
    name: test uploaded arm64 images
    if: ${{ contains(inputs.platforms, 'arm64') && inputs.push }}
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          ref: ${{ inputs.ref }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64/v8
      - name: Set up Docker Buildx for multi-platform builds
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ inputs.platforms }}
      - run: |
          for i in '"${{ needs.build.outputs.images }}"'; do echo 'image: '$i; done
