---
name: 'Test package building for specific distributions'

on:
  push:
  workflow_call:
    inputs:
      branch-name:
        description: 'Checkout to a specific branch'
        required: true
        default: ''
        type: string
  schedule:
    - cron: '0 1 * * *'

permissions: # least privileges, see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
  contents: read

jobs:
  build:
    env:
      PLATFORMS: linux/arm64,linux/amd64
      DOCKER_BUILDKIT: 1
    name: build.sh
    # on a ubuntu-20.04 VM
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # product: ['authoritative', 'recursor', 'dnsdist']
        product: [ 'dnsdist']
        os:
          # - el-7
          # - el-8
          # - el-9
          # - debian-buster
          # - debian-bullseye
          # - debian-bookworm
          # - ubuntu-focal
          # - ubuntu-jammy
          #Â - el-8-arm64
          - el-9-arm64
          # - debian-buster-arm64
          # - debian-bullseye-arm64
          # - debian-bookworm-arm64
          # - ubuntu-focal-arm64
          # - ubuntu-jammy-arm64
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # for correct version numbers
          submodules: recursive
          ref: ${{ inputs.branch-name }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64
      - name: Set up Docker Buildx for multi-platform builds
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      # this builds packages and runs our unit test (make check)
      - run: builder/build.sh -D -v -m ${{ matrix.product }} ${{ matrix.os }}

      - name: Get build args
        run:  |
              echo "BUILD_ARGS<<EOF" >> $GITHUB_ENV
              echo "$(cat /home/runner/work/pdns/pdns/builder/tmp/${{ matrix.os }}-build-args)" >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV

      - run: echo "${{ env.BUILD_ARGS }}"

      - name: Build packages
        uses: docker/build-push-action@v5
        with:
          context: .
          file: /home/runner/work/pdns/pdns/builder/tmp/Dockerfile_${{ matrix.os }}.tmp
          push: false
          platforms: linux/arm64
          build-args: |
            ${{ env.BUILD_ARGS }}
          tags: |
            builder-pdns-${{ matrix.os }}:latest

      - name: Get version number
        run: |
          echo "version=$(readlink builder/tmp/latest)" >> $GITHUB_OUTPUT
        id: getversion

      # - name: Upload packages
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ matrix.product }}-${{ matrix.os }}-${{ steps.getversion.outputs.version }}
      #     path: built_pkgs/
      #     retention-days: 7
