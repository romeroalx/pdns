---
name: 'Build and test everything'

on:
  push:
  pull_request:
  schedule:
    - cron: '0 22 * * 3'

jobs:

  build-recursor:
    name: build recursor
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        sanitizers: [ubsan+asan, tsan]
    env:
      UBSAN_OPTIONS: "print_stacktrace=1:halt_on_error=1:suppressions=${{ github.workspace }}/build-scripts/UBSan.supp"
      ASAN_OPTIONS: detect_leaks=0
      SANITIZERS: ${{ matrix.sanitizers }}
    defaults:
      run:
        working-directory: ./pdns/recursordist/
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 5
          submodules: recursive
      - name: get timestamp for cache
        id: get-stamp
        run: |
          echo "stamp=$(/bin/date +%s)" >> "$GITHUB_OUTPUT"
        shell: bash
      - name: let GitHub cache our ccache data
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: recursor-${{ matrix.sanitizers }}-ccache-${{ steps.get-stamp.outputs.stamp }}
          restore-keys: recursor-${{ matrix.sanitizers }}-ccache-
      - run: ../../build-scripts/gh-actions-setup-inv  # this runs apt update+upgrade
      - run: inv apt-fresh
      - run: inv install-clang
      - run: inv install-rec-build-deps
      - run: inv ci-autoconf
      - run: inv ci-rec-configure
      - run: inv ci-rec-make
      - run: inv ci-rec-run-unit-tests
      - run: inv ci-make-install
      - run: ccache -s
      - name: Store the binaries
        uses: actions/upload-artifact@v2 # this takes 30 seconds, maybe we want to tar
        with:
          name: pdns-recursor-${{ matrix.sanitizers }}
          path: /opt/pdns-recursor
          retention-days: 1


  test-recursor-api:
    needs: build-recursor
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        sanitizers: [ubsan+asan, tsan]
    env:
      UBSAN_OPTIONS: "print_stacktrace=1:halt_on_error=1:suppressions=${{ github.workspace }}/build-scripts/UBSan.supp"
      ASAN_OPTIONS: detect_leaks=0
      TSAN_OPTIONS: "halt_on_error=1:suppressions=${{ github.workspace }}/pdns/recursordist/recursor-tsan.supp"
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 5
          submodules: recursive
      - name: Fetch the binaries
        uses: actions/download-artifact@v2
        with:
          name: pdns-recursor-${{ matrix.sanitizers }}
          path: /opt/pdns-recursor
      - run: build-scripts/gh-actions-setup-inv  # this runs apt update+upgrade
      - run: inv add-auth-repo  # FIXME: do we need this for rec API testing?
      - run: inv install-clang-runtime
      - run: inv install-rec-test-deps
      - run: inv test-api recursor

  test-recursor-regression:
    needs: build-recursor
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        sanitizers: [ubsan+asan, tsan]
    env:
      UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1:suppressions=${{ github.workspace }}/build-scripts/UBSan.supp'
      ASAN_OPTIONS: detect_leaks=0
      TSAN_OPTIONS: "halt_on_error=1:suppressions=${{ github.workspace }}/pdns/recursordist/recursor-tsan.supp"
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 5
          submodules: recursive
      - name: Fetch the binaries
        uses: actions/download-artifact@v2
        with:
          name: pdns-recursor-${{ matrix.sanitizers }}
          path: /opt/pdns-recursor
      - run: build-scripts/gh-actions-setup-inv  # this runs apt update+upgrade
      - run: inv add-auth-repo
      - run: inv install-clang-runtime
      - run: inv install-rec-test-deps
      - run: inv test-regression-recursor

  test-recursor-bulk:
    name: 'test rec *mini* bulk'
    needs: build-recursor
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        sanitizers: [ubsan+asan]
        threads: [1, 2, 3, 4, 8, 16]
        mthreads: [2048, 4096]
        shards: [1, 2, 1024]
    env:
      UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1:suppressions=${{ github.workspace }}/build-scripts/UBSan.supp'
      ASAN_OPTIONS: detect_leaks=0
      TSAN_OPTIONS: "halt_on_error=1:suppressions=${{ github.workspace }}/pdns/recursordist/recursor-tsan.supp"
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 5
          submodules: recursive
      - name: Fetch the binaries
        uses: actions/download-artifact@v2
        with:
          name: pdns-recursor-${{ matrix.sanitizers }}
          path: /opt/pdns-recursor
      - run: build-scripts/gh-actions-setup-inv  # this runs apt update+upgrade
      - run: inv install-clang-runtime
      - run: inv install-rec-bulk-deps
      - run: inv test-bulk-recursor ${{ matrix.threads }} ${{ matrix.mthreads }} ${{ matrix.shards }}

  collect:
    needs:
      - build-recursor
      - test-recursor-api
      - test-recursor-regression
      - test-recursor-bulk
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 5
          submodules: recursive
      - name: Install yq
        run: sudo wget https://github.com/mikefarah/yq/releases/download/v4.9.6/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq
      - name: Get full list of jobs for this workflow
        run: yq e '.jobs | keys' .github/workflows/build-and-test-all.yml | grep -v '^- collect' | sort | tee /tmp/workflow-jobs-list.yml
      - name: Get list of jobs the collect job depends on
        run: yq e '.jobs.collect.needs | ... comments=""' .github/workflows/build-and-test-all.yml | sort | tee /tmp/workflow-collect-dependencies.yml
      - name: Diff them
        run: diff -u /tmp/workflow-jobs-list.yml /tmp/workflow-collect-dependencies.yml

# FIXME: if we can make upload/download-artifact fasts, running unit tests outside of build can let regression tests start earlier
